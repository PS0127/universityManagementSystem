@page
@model universityManagementSystem.Pages.Logs.IndexModel
@{
}


<select name="options" id="options" onchange="sortTable()">

    <option value="idasc">Sort by: ID - Low to High</option>
    <option value="iddesc">Sort by: ID - High to Low</option>
    <option value="persontypeasc">Sort by: Person Type - A to Z</option>
    <option value="persontypedesc">Sort by: Person Type - Z to A</option>
    <option value="actionasc">Sort by: Action - A to Z</option>
    <option value="actiondesc">Sort by: Action - Z to A</option>
</select>

<table class="table" id="logsTable">
    <thead>
        <tr>
            <th>ID</th>
            <th>Type</th>
            <th>Action</th>
            <th>Date</th>
            <th>Message</th>
        </tr>
    </thead>

    <!-- Makes table row for each logmessage -->
    @foreach (var LogMessage in Model.AllLogs)
    {
        <tr id="studentData">
            <td>@LogMessage.id</td>
            <td>@LogMessage.personType</td>
            <td>@LogMessage.action</td>
            <td>@LogMessage.date</td>
            <td>@LogMessage.message</td>
        </tr>
    }

</table>

<script>
    function sortTable() {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("logsTable");
        var options = document.getElementById("options").value;

        // if statements to determine which column to filter
        if (options.includes("id")) {
            n = 0;
        }
        else if (options.includes("persontype")) {
            n = 1;
        }
        else if (options.includes("action")) {
            n = 2;
        }
        switching = true;
        // Set the sorting direction to ascending:
        //dir = "asc";
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /* Check if the two rows should switch place,
                based on the direction, asc or desc: */
                if (options.includes("asc")) {
                    if (n != 0 || n != 3) {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            // If so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                    else {
                        if (Number(x.innerHTML) > Number(y.innerHTML)) {
                            shouldSwitch = true;
                            break;
                        }
                    }

                } else if (options.includes("desc")) {
                    if (n != 0) {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            // If so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                    else {
                        if (Number(x.innerHTML) < Number(y.innerHTML)) {
                            shouldSwitch = true;
                            break;
                        }
                    }


                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                // Each time a switch is done, increase this count by 1:
                switchcount++;
            } 
            
        }
    }


</script>